javascript:  var unidades = {     lanceiro: 1,     espadachim: 1,     barbaro: 1,     arqueiro: 1,     explorador: 1,     cavleve: 1,     arqcav: 1,     cavpesada: 1,     ariete: 1,     catapulta: 1 };  var alerta_pesquisas = 1;
/*      Script: [Script] Pesquisa em massa (ferreiro simples).       Versão atual: 1.3.       Histórico:         Versão 1.0 (17:41 09/06/2011):                     +) Versão inicial.          Versão 1.1 (19:27 09/06/2011):                     +) Adicionada a função de alterar a cor da bolinha de pesquisa (verde, marrom, amarelo e cinza).                     *) Corrigida a não-remoção do carregador.          Versão 1.2 (21:45 09/06/2011):                     *) Opções traduzidas.         Versão 1.3 (00:34 24/06/2011):                     +) Corrigido problema na acentuação das palavras.       Desenvolvedor: Przyr.  */           /* (Início) Variáveis globais não-configuráveis */  var units = {     spear: unidades.lanceiro,     sword: unidades.espadachim,     axe: unidades.barbaro,     archer: unidades.arqueiro,     spy: unidades.explorador,     light: unidades.cavleve,     marcher: unidades.arqcav,     heavy: unidades.cavpesada,     ram: unidades.ariete,     catapult: unidades.catapulta };  /* (Fim) Variáveis globais não-configuráveis */           /* (Início) Checagem de problemas de configuração e modo de uso */  if (!(game_data.screen == "overview_villages" && game_data.mode == "tech")) {     $(location).attr("href", game_data.link_base_pure + "overview_villages&mode=tech");     end(); }  if (um_ou_zero(units.spear) == false || um_ou_zero(units.sword) == false || um_ou_zero(units.axe) == false || um_ou_zero(units.archer) == false || um_ou_zero(units.spy) == false || um_ou_zero(units.light) == false ||  um_ou_zero(units.marcher) == false || um_ou_zero(units.heavy) == false || um_ou_zero(units.ram) == false || um_ou_zero(units.catapult) == false || um_ou_zero(alerta_pesquisas) == false) {     alert("VocÃª nÃ£o configurou corretamente uma ou mais pesquisas!");     end(); }  if (units.spear == 0 && units.sword == 0 && units.axe == 0 && units.archer == 0 && units.spy == 0 && units.light == 0 && units.marcher == 0 && units.heavy == 0 && units.ram == 0 && units.catapult == 0) {     alert("VocÃª nÃ£o configurou nenhuma pesquisa!");     end(); }  /* (Fim) Checagem de problemas de configuração e modo de uso */           /* (Início) Funções */  function AbrirCarregador() {     (function ($) { /* Centralizar ou fixar imagem */         $.fn.extend({             fixed: function () {                 return this.each(function () {                     var top = ($(window).height() - $(this).outerHeight()) / 2;                     var left = ($(window).width() - $(this).outerWidth()) / 2;                     $(this).css({                         position: 'fixed',                         margin: 0,                         top: (top > 0 ? top : 0) + 'px',                         left: (left > 0 ? left : 0) + 'px'                     });                 })             },              center: function () {                 return this.each(function () {                     var top = ($(window).height() - $(this).outerHeight()) / 2;                     var left = ($(window).width() - $(this).outerWidth()) / 2;                     $(this).css({                         position: 'center',                         margin: 0,                         top: (top > 0 ? top : 0) + 'px',                         left: (left > 0 ? left : 0) + 'px'                     });                 });             }         });     })(jQuery);      var ajax_loader = $('<img id="carregador_przyr" src="graphic/throbber.gif" alt=""></img>').appendTo($('#contentContainer'));      if (!mobile) $('#carregador_przyr').fixed();     else $('#carregador_przyr').center();      ajax_loader.fadeTo('normal', 0.75); }  function FecharCarregador() {     $('#carregador_przyr').remove(); }  function um_ou_zero(sValue) {     if (sValue == 1 || sValue == 0) return true;     else return false; }  function getElementsByClassName(sClassName) {     var elements = document.getElementsByTagName("*");     var result = [];      for (var i = 0, len = elements.length; i < len; i++) {         if (elements[i].className == sClassName) {             result.push(elements[i]);         }     }      return result; }  function mudar_bolinha(classe, cor_entrada, cor_saida) {     $(classe).removeClass(cor_entrada).addClass(cor_saida); }  function pesquisar(classe, element, village_id, tech_id) {     var url = TechOverview.urls.ajax_research_link;     url = url.replace(/village=([0-9]*)/, "village=" + village_id);     var techId = {         tech_id: tech_id     };     $.post(url, techId, function (ret) {         if (ret.success) {             $('#village_tech_order_' + village_id).html(ret.tech_order);              cont = cont + 1;              mudar_bolinha(classe, "rtt brown", "rtt yellow");         } else {             erros = erros + 1;             mudar_bolinha(classe, "rtt brown", "rtt grey");         }          if ((cont + erros) == (pesquisas.length - neutro)) {             if (alerta_pesquisas == 1) alert("Pesquisa(s) realizada(s): " + (cont) + ".");              FecharCarregador();         }     }, 'json') }  /* (Fim) Funções */           /* (Início) Algorítmo */  AbrirCarregador();  var pesquisas = getElementsByClassName("rtt brown");  var id, unidade;  var cont = 0,     erros = 0,     neutro = 0;  if (pesquisas.length == 0) {     if (alerta_pesquisas == 1) alert("NÃ£o hÃ¡ nenhuma pesquisa para ser feita!");      FecharCarregador();     end(); }  for (i = 0; i < pesquisas.length; i++) {     id = pesquisas[i].id.split("_")[0];     unidade = pesquisas[i].id.split("_")[1];      if (units[unidade] == 1) pesquisar(pesquisas[i], this, id, unidade);     else neutro = neutro + 1;      if ((cont + erros) == (pesquisas.length - neutro)) {         if (alerta_pesquisas == 1) alert("Pesquisa(s) realizada(s): " + (cont) + ".");          FecharCarregador();     } }  void(0);  /* (Fim) Algorítmo */